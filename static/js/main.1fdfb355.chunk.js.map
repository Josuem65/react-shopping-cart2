{"version":3,"sources":["logo.svg","features/counter/cart/cartSlice.js","features/counter/products/Products.js","features/counter/products/productsSlice.js","app/store.js","features/counter/cart/Cart.js","features/counter/sizes/Sizes.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","cartSlice","createSlice","name","initialState","cartToggled","reducers","toggle","state","action","payload","actions","selectToggle","cart","Products","dispatch","useDispatch","products","useSelector","selectProducts","filtered","selectFiltered","isItToggled","allProducts","React","createElement","className","map","product","index","price","installment","installments","currency","currencyFormat","free","freeShipping","isFreeShipping","src","concat","img","normal","title","monthly","toFixed","onClick","addToCart","useEffect","getProducts","length","productsSlice","subtotal","display","addToFiltered","console","log","filteredArr","hashing","x","push","i","j","sizeArr","availableSizes","k","findIndex","item","id","quantity","decreaseQuantity","increaseQuantity","deleteFromCart","filter","targetIndex","v","splice","JSON","parse","stringify","axios","get","then","data","selectCart","selectSubtotal","store","configureStore","reducer","productsReducer","cartReducer","Cart","cartList","subtotalList","cartToggle","setCartToggle","useState","Fragment","FaCartPlus","style","backgroundColor","color","padding","fontSize","position","right","top","reduce","total","currItem","thumb","description","price2","SizeChart","sizes","sizeObjects","key","value","toggled","currState","setCurrState","selectedArr","size","thisObj","find","selectedSize","restOfArr2","updatedItem2","restOfArr","updatedItem","handleSize","App","Sizes","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.1fdfb355.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    cartToggled: 0,\r\n  },\r\n\r\n  reducers: {\r\n    toggle: (state, action) => {\r\n      state.cartToggled = action.payload\r\n    }\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  // extraReducers: (builder) => {\r\n  //   builder\r\n  //     .addCase(incrementAsync.pending, (state) => {\r\n  //       state.status = 'loading';\r\n  //     })\r\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\r\n  //       state.status = 'idle';\r\n  //       state.value += action.payload;\r\n  //     });\r\n  // },\r\n});\r\n\r\nexport const { toggle } = cartSlice.actions;\r\n\r\nexport const selectCount = (state) => state.cart.cart;\r\nexport const selectToggle = (state => state.cart.cartToggled)\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\n\r\n\r\nexport default cartSlice.reducer;","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProducts, productsSlice, selectProducts, addToCart, selectFiltered } from './productsSlice'\r\nimport { selectToggle } from '../cart/cartSlice'\r\n\r\nexport default function Products() {\r\n  const dispatch = useDispatch()\r\n  const products = useSelector(selectProducts)\r\n  const filtered = useSelector(selectFiltered)\r\n  const isItToggled = useSelector(selectToggle)\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts())\r\n  }, []);\r\n   //console.log(products[0] ? products[0].img.normal : \"still undefined\")\r\n  function installments(price, installments, currency) {\r\n    if(installments) {\r\n      let monthly = price / installments\r\n      return (\r\n        <span className=\"productInstallments\">or {installments} x {currency}{monthly.toFixed(2)}</span>\r\n      )\r\n    } \r\n  }\r\n\r\n  function freeShipping(free) {\r\n    if(free) {\r\n      return (\r\n        <span className=\"freeShipping\">Free shipping</span>\r\n      )\r\n    } \r\n  }\r\n//  A L L   P R O D U C T S   F U N C T I O N\r\n  function allProducts(products) {\r\n    return (\r\n      <div className={isItToggled ? \"mainProducts cartIsToggled\": \"mainProducts\"}>\r\n       {products.map((product, index) => {\r\n          const price = product.price\r\n          const installment = product.installments\r\n          const currency = product.currencyFormat\r\n        return (\r\n        <div className=\"eachProduct\">\r\n          {freeShipping(product.isFreeShipping)}\r\n          <img src={`https://josuem65.github.io/react-shopping-cart2${product.img.normal}`}className=\"productImg\"/> \r\n          <span className=\"productTitle\">{product.title}</span>\r\n          <span className=\"productPrice\">{currency}{price}</span>\r\n          {installments(price, installment, currency)}\r\n          <button className=\"addToCartBtn\" onClick={() => dispatch(addToCart(product))}>Add to cart</button>\r\n        </div>\r\n        )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n  return (filtered.length > 0 ? allProducts(filtered) : allProducts(products))\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport Products from './Products';\r\n\r\nconst logger = (v) => console.log(JSON.parse(JSON.stringify(v)))\r\n\r\n\r\nexport const productsSlice = createSlice({\r\n  name: 'products',\r\n  initialState: {\r\n    products: [],\r\n    filtered: [],\r\n    cart: [],\r\n    subtotal: [],\r\n  },\r\n\r\n  reducers: {\r\n    display: (state, action) => {\r\n      state.products = action.payload\r\n    },\r\n    addToFiltered: (state, action) => {\r\n      console.log(action.payload)\r\n      let filteredArr = []\r\n      let hashing = []\r\n      for(let x=0; x < state.products.length; x++) {\r\n        hashing.push(0)\r\n    }\r\n\r\n      if(action.payload.length > 0) {\r\n      for(let i=0; i < action.payload.length; i++) {\r\n        for(let j=0; j < state.products.length; j++) {\r\n          if(hashing[j] === 1) {\r\n            continue;\r\n          }\r\n          let sizeArr = state.products[j].availableSizes\r\n          for(let k=0; k < sizeArr.length; k++) {\r\n            if(action.payload[i] == sizeArr[k]) {\r\n              filteredArr.push(state.products[j])\r\n              hashing[j] = 1\r\n              if(j == state.products.length -1 && k == sizeArr.length -1) {\r\n                state.filtered = filteredArr\r\n              }\r\n              break;\r\n          } if(j == state.products.length -1 && k == sizeArr.length -1) {\r\n            state.filtered = filteredArr\r\n          }\r\n        }\r\n      }\r\n      }\r\n    } else {\r\n      state.filtered = action.payload;\r\n    }\r\n    },\r\n    addToCart: (state, action) => {\r\n      const product = action.payload \r\n      const index = state.cart.findIndex(item => item.id === product.id)\r\n      if(index > -1) {\r\n        state.cart[index].quantity += 1\r\n        state.subtotal[index] += product.price\r\n      } else {\r\n        state.cart.push({...product, quantity: 1})\r\n        state.subtotal.push(product.price)\r\n      }\r\n    },\r\n    decreaseQuantity: (state, action) => {\r\n      const index = state.cart.findIndex(item => item.id === action.payload.id)\r\n      if(action.payload.quantity > 1) {\r\n        state.cart[index].quantity -= 1\r\n        state.subtotal[index] -= action.payload.price\r\n      }\r\n    },\r\n    increaseQuantity: (state, action) => {\r\n      const index = state.cart.findIndex(item => item.id === action.payload.id)\r\n      state.cart[index].quantity +=1\r\n      state.subtotal[index] += action.payload.price\r\n    },\r\n    deleteFromCart: (state, action) => {\r\n      console.log(action.payload)\r\n      const filteredArr = state.cart.filter((item) => item.id !== action.payload.id)\r\n      const targetIndex = state.cart.findIndex(item => item.id === action.payload.id)\r\n      if (targetIndex > -1) { // only splice array when item is found\r\n        state.subtotal.splice(targetIndex, 1); // 2nd parameter means remove one item only\r\n      }\r\n      console.log(state.subtotal)\r\n      state.cart = filteredArr\r\n      logger(state.cart)\r\n    }\r\n  }, \r\n});\r\n\r\nexport const { display, addToFiltered, addToCart, decreaseQuantity, increaseQuantity, deleteFromCart } = productsSlice.actions;\r\n\r\nexport const getProducts = () => (dispatch) => {\r\n  axios.get('https://josuem65.github.io/json-react-shopping-cart/db.json')\r\n  .then((products) => dispatch(display(products.data.products))) // change to display(products.data.products)\r\n}\r\n\r\nexport const selectProducts = (state) => state.products.products; \r\nexport const selectCart = (state) => state.products.cart\r\nexport const selectFiltered = (state) => state.products.filtered\r\nexport const selectSubtotal = (state) => state.products.subtotal\r\n\r\nexport default productsSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\n// import counterReducer from '../features/counter/counterSlice';\r\nimport productsReducer from '../features/counter/products/productsSlice'\r\nimport cartReducer from '../features/counter/cart/cartSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // counter: counterReducer,\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggle } from './cartSlice'\r\nimport { selectCart, decreaseQuantity, increaseQuantity, deleteFromCart, selectSubtotal } from '../products/productsSlice'\r\nimport { FaCartPlus } from \"react-icons/fa\"\r\n\r\nexport default function Cart() {\r\n    const dispatch = useDispatch()\r\n    const cartList = useSelector(selectCart)\r\n    const subtotalList = useSelector(selectSubtotal)\r\n    const [ cartToggle, setCartToggle ] = useState(0)\r\n    console.log(cartList)\r\n    function subTotal(item) {\r\n      const sub = item.price * item.quantity\r\n      return sub.toFixed(2)\r\n    }\r\n\r\n    function subtotalHandle() {\r\n      if(subtotalList.length == 1) {\r\n        return '$' + subtotalList[0].toFixed(2)\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n\r\n    function handleClick() {\r\n      !cartToggle ? setCartToggle(1) : setCartToggle(0)\r\n    }\r\n\r\n    useEffect(() => {\r\n      dispatch(toggle(cartToggle))\r\n    },)\r\n\r\n    const iconStyle = { backgroundColor: \"rgb(27, 26, 32)\", color: \"white\", padding: \".2em\", fontSize: \"3em\", position: \"fixed\", right: \"0\", top: \"0\"}\r\n    const toggledStyle = { backgroundColor: \"rgb(27, 26, 32)\", color: \"white\", padding: \".2em\", fontSize: \"3em\", position: \"fixed\", right: \"30%\", top: \"0\" }\r\n    return (\r\n      <>\r\n      <FaCartPlus style={cartToggle ? toggledStyle : iconStyle} onClick={() => handleClick()}/>\r\n      <div className={cartToggle ? \"mainCart cartToggled\" : \"mainCart\"} >\r\n        <h1 className=\"cartHeader\">Cart</h1>\r\n        <div className=\"cartAmountDiv\">\r\n          <li className=\"cartAmount\">{cartList.reduce((total, currItem) => total + currItem.quantity, 0)}</li>\r\n          <p>Items</p>\r\n        </div>\r\n        <div className=\"allCartItems\">\r\n        {cartList.map((item) => {\r\n          return (\r\n            <div className=\"itemCart\">\r\n              <img className=\"imgCart\" src={`https://josuem65.github.io/react-shopping-cart2${item.img.thumb}`}/>\r\n              <div className=\"middleDivCart\">\r\n                <span className=\"title\">{item.title}</span>\r\n                <span className=\"size\">{item.availableSizes}</span>\r\n                <span className=\"description\">{item.description}</span>\r\n                <span className=\"quantity\">Quantity: {item.quantity}</span>\r\n              </div>\r\n              <div className=\"rightDivCart\">\r\n                <button className=\"deleteItem\" onClick={() => dispatch(deleteFromCart(item))}>x</button>\r\n                <span className=\"itemSubtotal\">{item.currencyFormat}{item.price.toFixed(2)}</span>\r\n                <div className=\"decrease_increaseBtns\">\r\n                  <button className=\"decreaseBtn\" onClick={() => dispatch(decreaseQuantity(item))}>-</button>\r\n                  <button className=\"increaseBtn\" onClick={() => dispatch(increaseQuantity(item))}>+</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            )\r\n        })}\r\n        </div>\r\n        <div>\r\n          <div className=\"subtotalDiv\">\r\n            <li className=\"subtotalHeading\">Subtotal</li>\r\n            <h2 className=\"cartSubtotal\">{subtotalList.length > 1 ? '$' + subtotalList.reduce((price, price2) => price + price2).toFixed(2) : subtotalHandle()}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectProducts, addToFiltered } from '../products/productsSlice'\r\n\r\nexport default function SizeChart() { \r\n    const dispatch = useDispatch()\r\n    const sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL']\r\n    let sizeObjects = []\r\n    for(let i=0; i < sizes.length; i++) {\r\n        sizeObjects.push({key: i, value: sizes[i], toggled: 0})\r\n    }\r\n    const [ currState, setCurrState ] = useState(sizeObjects)\r\n\r\n    function handleSize(size, index) {\r\n        const selectedSize = currState.find((item) => item.value == size)\r\n        if(!selectedSize.toggled) {\r\n            const restOfArr = currState.filter((item) => item.value !== size)\r\n            const updatedItem = {...selectedSize, toggled: 1}\r\n            setCurrState([...restOfArr, updatedItem])\r\n        } else if(selectedSize.toggled) {\r\n            const restOfArr2 = currState.filter((item) => item.value !== size)\r\n            const updatedItem2 = {...selectedSize, toggled: 0}\r\n            setCurrState([...restOfArr2, updatedItem2])\r\n        }\r\n    }\r\n    \r\n    const selectedArr = currState.filter((item) => item.toggled === 1).map((x) => x.value)\r\n    useEffect(() => {\r\n        dispatch(addToFiltered(selectedArr))\r\n        console.log(selectedArr)\r\n    }, currState)\r\n    \r\n    return (\r\n        <div>\r\n          <h3>Sizes:</h3>\r\n          <div>\r\n            {sizes.map((size, index) => {\r\n                let thisObj = currState.find((x) => x.key == index)\r\n                return <button className={thisObj.toggled ? 'sizeBtn toggled': 'sizeBtn'} onClick={() => handleSize(size, index)}>{size}</button>\r\n            })}\r\n          </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './features/counter/cart/Cart.css'\r\nimport './features/counter/products/Product.css'\r\nimport './features/counter/sizes/Size.css'\r\nimport Cart from './features/counter/cart/Cart';\r\nimport Products from './features/counter/products/Products'\r\nimport Sizes from './features/counter/sizes/Sizes'\r\nimport { selectToggle } from './features/counter/cart/cartSlice'\r\n\r\nfunction App() {\r\n  const cartToggled = useSelector(selectToggle)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Sizes/>\r\n      <Products/>\r\n      <Cart/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}